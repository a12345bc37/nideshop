{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/upload.js"
    ],
    "names": [
        "Base",
        "require",
        "fs",
        "formidable",
        "module",
        "exports",
        "uploadImgPicAction",
        "file",
        "req",
        "res",
        "next",
        "console",
        "log",
        "image_path",
        "getPath",
        "that",
        "success",
        "status",
        "fileUrl",
        "err",
        "fail",
        "type",
        "message",
        "Promise",
        "resolve",
        "reject",
        "form",
        "IncomingForm",
        "parse",
        "fields",
        "files",
        "brandPicAction",
        "brandFile",
        "think",
        "isEmpty",
        "filename",
        "uuid",
        "is",
        "createReadStream",
        "path",
        "os",
        "createWriteStream",
        "ROOT_PATH",
        "pipe",
        "name",
        "brandNewPicAction",
        "categoryWapBannerPicAction",
        "imageFile",
        "topicThumbAction"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/upload.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst fs = require('fs');\nconst formidable = require('formidable');\n\nmodule.exports = class extends Base {\n\n    async uploadImgPicAction(file, req, res, next) {\n        //const type = req.params.type;\n        console.log(req);\n        console.log(file);\n        console.log(\"1----------------------------------------------111\");\n\n\n        try {\n            //const image_path = await this.qiniu(req, type);\n            const image_path = await this.getPath(req, res);\n            const that = this;\n            return that.success({\n                status: 1,\n                fileUrl: 'http://127.0.0.1:8360' + image_path\n            });\n        } catch (err) {\n            console.log('上传图片失败', err);\n\n            return this.fail({\n                status: 0,\n                type: 'ERROR_UPLOAD_IMG',\n                message: '上传图片失败' + err\n            });\n\n        }\n    }\n    async getPath(req, res) {\n        return new Promise((resolve, reject) => {\n            var form = new formidable.IncomingForm();\n            console.log(req);\n            form.parse(req, function(err, fields, files) {\n\n            });\n            // const form = formidable.IncomingForm();\n            // form.uploadDir = './public/img';\n            // form.parse(req, async(err, fields, files) => {\n\n            //     const hashName = (new Date().getTime() + Math.ceil(Math.random() * 10000)).toString(16);\n            //     const extname = path.extname(files.file.name);\n            //     if (!['.jpg', '.jpeg', '.png'].includes(extname)) {\n            //         fs.unlinkSync(files.file.path);\n            //         res.send({\n            //             status: 0,\n            //             type: 'ERROR_EXTNAME',\n            //             message: '文件格式错误'\n            //         })\n            //         reject('上传失败');\n            //         return\n            //     }\n            //     const fullName = hashName + extname;\n            //     const repath = './public/img/' + fullName;\n            //     try {\n            //         fs.renameSync(files.file.path, repath);\n            //         gm(repath)\n            //             .resize(200, 200, \"!\")\n            //             .write(repath, async(err) => {\n            //                 // if(err){\n            //                 // \tconsole.log('裁切图片失败');\n            //                 // \treject('裁切图片失败');\n            //                 // \treturn\n            //                 // }\n            //                 resolve(fullName)\n            //             })\n            //     } catch (err) {\n            //         console.log('保存图片失败', err);\n            //         if (fs.existsSync(repath)) {\n            //             fs.unlinkSync(repath);\n            //         } else {\n            //             fs.unlinkSync(files.file.path);\n            //         }\n            //         reject('保存图片失败')\n            //     }\n            // });\n        })\n    }\n    async brandPicAction() {\n        const brandFile = this.file('file');\n        if (think.isEmpty(brandFile)) {\n            return this.fail('保存失败');\n        }\n        const that = this;\n        const filename = '/static/upload/brand/' + think.uuid(32) + '.jpg';\n        const is = fs.createReadStream(brandFile.path);\n        const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n        is.pipe(os);\n\n        return that.success({\n            name: 'brand_pic',\n            fileUrl: 'http://127.0.0.1:8360' + filename\n        });\n    }\n\n    async brandNewPicAction() {\n        const brandFile = this.file('brand_new_pic');\n        if (think.isEmpty(brandFile)) {\n            return this.fail('保存失败');\n        }\n        const that = this;\n        const filename = '/static/upload/brand/' + think.uuid(32) + '.jpg';\n\n        const is = fs.createReadStream(brandFile.path);\n        const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n        is.pipe(os);\n\n        return that.success({\n            name: 'brand_new_pic',\n            fileUrl: 'http://127.0.0.1:8360' + filename\n        });\n    }\n\n    async categoryWapBannerPicAction() {\n        const imageFile = this.file('wap_banner_pic');\n        if (think.isEmpty(imageFile)) {\n            return this.fail('保存失败');\n        }\n        const that = this;\n        const filename = '/static/upload/category/' + think.uuid(32) + '.jpg';\n\n        const is = fs.createReadStream(imageFile.path);\n        const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n        is.pipe(os);\n\n        return that.success({\n            name: 'wap_banner_url',\n            fileUrl: 'http://127.0.0.1:8360' + filename\n        });\n    }\n\n    async topicThumbAction() {\n        const imageFile = this.file('scene_pic_url');\n        if (think.isEmpty(imageFile)) {\n            return this.fail('保存失败');\n        }\n        const that = this;\n        const filename = '/static/upload/topic/' + think.uuid(32) + '.jpg';\n\n        const is = fs.createReadStream(imageFile.path);\n        const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n        is.pipe(os);\n\n        return that.success({\n            name: 'scene_pic_url',\n            fileUrl: 'http://127.0.0.1:8360' + filename\n        });\n    }\n};"
    ]
}